pipeline {
    agent any
    
    parameters {
        string(name: 'PATCH_NUMBER', defaultValue: '35247514', description: 'Patch identification number (e.g., 35247514)')
        string(name: 'PATCH_FILE', defaultValue: 'p35247514_122130_Generic.zip', description: 'Patch ZIP file name')
        string(name: 'ORACLE_HOME', defaultValue: 'E:\\Oracle\\Middleware\\Oracle_Home', description: 'Oracle Home directory path on Windows server')
        string(name: 'PATCH_LOCAL_PATH', defaultValue: '/home/appadmin/patches/p35247514_122130_Generic.zip', description: 'Source patch file path on Ansible server')
        string(name: 'PATCH_REMOTE_PATH', defaultValue: 'E:\\Oracle\\patches\\p35247514_122130_Generic.zip', description: 'Destination patch file path on Windows server')
        string(name: 'PATCH_EXTRACT_PATH', defaultValue: 'E:\\Oracle\\Middleware\\patches\\35247514', description: 'Patch extraction directory on Windows server')
        choice(name: 'TARGET_HOSTS', choices: ['prod_weblogic_win', 'prod_weblogic_medgo', 'prod_weblogic_batch', 'prod_weblogic_external_reports'], description: 'Target host group from inventory')
        booleanParam(name: 'DRY_RUN', defaultValue: false, description: 'Run in check mode (dry run) - preview changes without making them')
        booleanParam(name: 'VERBOSE', defaultValue: true, description: 'Enable verbose output for detailed logging')
    }
    
    stages {
        stage('Validate Parameters') {
            steps {
                script {
                    // Validate required parameters
                    def requiredParams = [
                        'PATCH_NUMBER', 'PATCH_FILE', 'ORACLE_HOME', 
                        'PATCH_LOCAL_PATH', 'PATCH_REMOTE_PATH', 'PATCH_EXTRACT_PATH'
                    ]
                    
                    requiredParams.each { param ->
                        if (!params[param]?.trim()) {
                            error "Parameter ${param} is required! Please provide a value."
                        }
                    }
                    
                    echo "✅ All required parameters provided:"
                    requiredParams.each { param ->
                        echo "   ${param}: ${params[param]}"
                    }
                }
            }
        }
        
        stage('Pre-Execution Summary') {
            steps {
                script {
                    echo """
                    ===== PRE-EXECUTION SUMMARY =====
                    🎯 Target Environment: PROD
                    🔧 Patch Number: ${params.PATCH_NUMBER}
                    📦 Patch File: ${params.PATCH_FILE}
                    🖥️  Target Hosts: ${params.TARGET_HOSTS}
                    🏠 Oracle Home: ${params.ORACLE_HOME}
                    📁 Source Path: ${params.PATCH_LOCAL_PATH}
                    💾 Remote Path: ${params.PATCH_REMOTE_PATH}
                    📂 Extract Path: ${params.PATCH_EXTRACT_PATH}
                    🔍 Dry Run Mode (TEST MODE): ${params.DRY_RUN ? 'ENABLED' : 'DISABLED'}
                    📊 Verbose Output: ${params.VERBOSE ? 'ENABLED' : 'DISABLED'}
                    =================================
                    """
                }
            }
        }
        
        stage('Execute WebLogic Patch') {
            steps {
                script {
                    def checkMode = params.DRY_RUN ? '--check' : ''
                    def verboseFlag = params.VERBOSE ? '-vv' : ''
                    
                    def ansibleCmd = """
                        ansible-playbook -i inventory Apply_Patch_weblogic.yml \\
                          -e "patch_number='${params.PATCH_NUMBER}'" \\
                          -e "patch_file='${params.PATCH_FILE}'" \\
                          -e "oracle_home='${params.ORACLE_HOME}'" \\
                          -e "patch_local_path='${params.PATCH_LOCAL_PATH}'" \\
                          -e "patch_remote_path='${params.PATCH_REMOTE_PATH}'" \\
                          -e "patch_extract_path='${params.PATCH_EXTRACT_PATH}'" \\
                          --limit ${params.TARGET_HOSTS} \\
                          ${checkMode} \\
                          ${verboseFlag}
                    """.stripIndent()
                    
                    echo "🚀 Executing Ansible command:"
                    echo ansibleCmd
                    
                    if (params.DRY_RUN) {
                        echo "⚠️  DRY RUN MODE: No actual changes will be made!"
                        echo "📋 This will show what would happen without applying the patch"
                    }
                    
                    sh ansibleCmd
                }
            }
        }
        
        stage('Post-Execution Summary') {
            steps {
                script {
                    def executionStatus = params.DRY_RUN ? "DRY RUN COMPLETED" : "WEBLOGIC PATCH APPLIED"
                    
                    echo """
                    ===== ${executionStatus} =====
                    🔧 Patch Number: ${params.PATCH_NUMBER}
                    📦 Patch File: ${params.PATCH_FILE}
                    🖥️  Target Hosts: ${params.TARGET_HOSTS}
                    🏠 Oracle Home: ${params.ORACLE_HOME}
                    📁 Source Path: ${params.PATCH_LOCAL_PATH}
                    💾 Remote Path: ${params.PATCH_REMOTE_PATH}
                    📂 Extract Path: ${params.PATCH_EXTRACT_PATH}
                    ⏰ Execution Time: ${new Date().format("yyyy-MM-dd HH:mm:ss")}
                    =========================================
                    """
                }
            }
        }
    }
    
    post {
        always {
            echo "🏁 WebLogic patch pipeline completed"
        }
        success {
            if (params.DRY_RUN) {
                echo "✅ WebLogic patch dry run completed successfully!"
                echo "📋 Review the output above to see what would happen during patch application"
                echo "🔄 To apply the actual patch, run the pipeline again with DRY_RUN=false"
            } else {
                echo "✅ WebLogic patch applied successfully!"
                echo "🔧 Patch ${params.PATCH_NUMBER} has been applied to ${params.TARGET_HOSTS}"
                echo "📦 Patch file ${params.PATCH_FILE} was processed"
                echo "🌐 WebLogic has been updated with the new patch"
            }
        }
        failure {
            echo "❌ WebLogic patch application failed!"
            echo "🔍 Check the console output above for error details"
            echo "📋 Verify all parameters are correct"
            echo "🖥️  Ensure target hosts are accessible"
            echo "📦 Check if patch file exists at ${params.PATCH_LOCAL_PATH}"
            echo "🏠 Verify Oracle Home path: ${params.ORACLE_HOME}"
        }
    }
}
