pipeline {
    agent any
    
    parameters {
        string(name: 'LOCAL_OPATCH_JAR', defaultValue: '/home/appadmin/OPatch/6880880/opatch_generic.jar', description: 'Path to OPatch JAR file on Ansible server')
        string(name: 'OPATCH_TEMP_DIR', defaultValue: 'E:\\OPatch_source', description: 'Temporary directory on Windows server for OPatch JAR')
        string(name: 'JAVA_PATH', defaultValue: 'E:\\jdk1.8.0_441\\bin\\java.exe', description: 'Java executable path on Windows server')
        string(name: 'ORACLE_HOME', defaultValue: 'E:\\Oracle\\Middleware\\Oracle_Home', description: 'Oracle Home directory path on Windows server')
        choice(name: 'TARGET_HOSTS', choices: ['prod_weblogic_win', 'prod_weblogic_medgo', 'prod_weblogic_batch', 'prod_weblogic_external_reports'], description: 'Target host group from inventory')
        booleanParam(name: 'DRY_RUN', defaultValue: false, description: 'Run in check mode (dry run) - preview changes without making them')
        booleanParam(name: 'VERBOSE', defaultValue: true, description: 'Enable verbose output for detailed logging')
    }
    
    stages {
        stage('Validate Parameters') {
            steps {
                script {
                    // Validate required parameters
                    def requiredParams = [
                        'LOCAL_OPATCH_JAR', 'OPATCH_TEMP_DIR', 'JAVA_PATH', 'ORACLE_HOME'
                    ]
                    
                    requiredParams.each { param ->
                        if (!params[param]?.trim()) {
                            error "Parameter ${param} is required! Please provide a value."
                        }
                    }
                    
                    echo "✅ All required parameters provided:"
                    requiredParams.each { param ->
                        echo "   ${param}: ${params[param]}"
                    }
                }
            }
        }
        
        stage('Pre-Execution Summary') {
            steps {
                script {
                    echo """
                    ===== PRE-EXECUTION SUMMARY =====
                    🎯 Target Environment: PROD
                    🔧 OPatch JAR: ${params.LOCAL_OPATCH_JAR}
                    📁 Temp Directory: ${params.OPATCH_TEMP_DIR}
                    ☕ Java Path: ${params.JAVA_PATH}
                    🏠 Oracle Home: ${params.ORACLE_HOME}
                    🖥️  Target Hosts: ${params.TARGET_HOSTS}
                    🔍 Dry Run Mode (TEST MODE): ${params.DRY_RUN ? 'ENABLED' : 'DISABLED'}
                    📊 Verbose Output: ${params.VERBOSE ? 'ENABLED' : 'DISABLED'}
                    =================================
                    """
                }
            }
        }
        
        stage('Execute OPatch Upgrade') {
            steps {
                script {
                    def checkMode = params.DRY_RUN ? '--check' : ''
                    def verboseFlag = params.VERBOSE ? '-vv' : ''
                    
                    def ansibleCmd = """
                        ansible-playbook -i inventory upgrade_opatch_windows.yml \\
                          -e "local_opatch_jar='${params.LOCAL_OPATCH_JAR}'" \\
                          -e "opatch_temp_dir='${params.OPATCH_TEMP_DIR}'" \\
                          -e "java_path='${params.JAVA_PATH}'" \\
                          -e "oracle_home='${params.ORACLE_HOME}'" \\
                          --limit ${params.TARGET_HOSTS} \\
                          ${checkMode} \\
                          ${verboseFlag}
                    """.stripIndent()
                    
                    echo "🚀 Executing Ansible command:"
                    echo ansibleCmd
                    
                    if (params.DRY_RUN) {
                        echo "⚠️  DRY RUN MODE: No actual changes will be made!"
                        echo "📋 This will show what would happen without upgrading OPatch"
                    }
                    
                    sh ansibleCmd
                }
            }
        }
        
        stage('Post-Execution Summary') {
            steps {
                script {
                    def executionStatus = params.DRY_RUN ? "DRY RUN COMPLETED" : "OPATCH UPGRADE COMPLETED"
                    
                    echo """
                    ===== ${executionStatus} =====
                    🔧 OPatch JAR: ${params.LOCAL_OPATCH_JAR}
                    📁 Temp Directory: ${params.OPATCH_TEMP_DIR}
                    ☕ Java Path: ${params.JAVA_PATH}
                    🏠 Oracle Home: ${params.ORACLE_HOME}
                    🖥️  Target Hosts: ${params.TARGET_HOSTS}
                    ⏰ Execution Time: ${new Date().format("yyyy-MM-dd HH:mm:ss")}
                    =========================================
                    """
                }
            }
        }
    }
    
    post {
        always {
            echo "🏁 OPatch upgrade pipeline completed"
        }
        success {
            if (params.DRY_RUN) {
                echo "✅ OPatch upgrade dry run completed successfully!"
                echo "📋 Review the output above to see what would happen during OPatch upgrade"
                echo "🔄 To execute actual upgrade, run the pipeline again with DRY_RUN=false"
            } else {
                echo "✅ OPatch upgrade completed successfully!"
                echo "🔧 OPatch has been upgraded using ${params.LOCAL_OPATCH_JAR}"
                echo "📦 OPatch JAR was copied to ${params.OPATCH_TEMP_DIR}"
                echo "☕ Java at ${params.JAVA_PATH} was used for upgrade"
                echo "🌐 WebLogic OPatch has been updated"
            }
        }
        failure {
            echo "❌ OPatch upgrade failed!"
            echo "🔍 Check the console output above for error details"
            echo "📋 Verify all parameters are correct"
            echo "🖥️  Ensure target hosts are accessible"
            echo "📦 Check if OPatch JAR exists at ${params.LOCAL_OPATCH_JAR}"
            echo "☕ Verify Java path: ${params.JAVA_PATH}"
            echo "🏠 Verify Oracle Home path: ${params.ORACLE_HOME}"
        }
    }
}
