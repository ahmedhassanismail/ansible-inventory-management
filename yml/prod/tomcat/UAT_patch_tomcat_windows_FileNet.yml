- name: Install Tomcat from ZIP at custom path and restore config
  hosts: uat-windows-tomcat-filenet
  gather_facts: false
  collections:
  - ansible.windows
  vars:
    install_path: 'E:\Apache Software Foundation\Tomcat 9.0'
    backup_dir: 'E:\Tomcat_Backup'
    full_backup_path: "{{ backup_dir }}/Full"
    zip_source_path: 'E:\apache-tomcat-9.0.105-windows-x64.zip'
    unzip_temp: 'E:\Temp\tomcat_unzip'
    extracted_folder: 'apache-tomcat-9.0.105'
    conf_folder_backup: "{{ full_backup_path }}/Tomcat 9.0/conf"
    webapps_backup: "{{ full_backup_path }}/Tomcat 9.0/webapps"
    ssl_folder: 'E:\Apache Software Foundation'
    ssl_backup: "{{ full_backup_path }}/SSL"

  tasks:

  - name: Ensure Tomcat ZIP file exists
    win_stat:
      path: "{{ zip_source_path }}"
    register: zip_check

  - name: Fail if Tomcat ZIP not found
    fail:
      msg: "Tomcat ZIP not found at {{ zip_source_path }}"
    when: not zip_check.stat.exists

  - name: Stop Tomcat9 service
    win_service:
      name: Tomcat9
      state: stopped
    ignore_errors: true

  - name: Kill Tomcat-related processes
    win_shell: |
      Stop-Process -Name "Tomcat9" -Force -ErrorAction SilentlyContinue
      Stop-Process -Name "Tomcat9w" -Force -ErrorAction SilentlyContinue
      Stop-Process -Name "java" -Force -ErrorAction SilentlyContinue
    args:
      executable: powershell
    ignore_errors: true

  - name: Ensure static full backup directory exists
    win_file:
      path: "{{ full_backup_path }}"
      state: directory

  - name: Backup full existing Tomcat directory
    win_copy:
      src: "{{ install_path }}"
      dest: "{{ full_backup_path }}"
      remote_src: true
      ignore_errors: true

  - name: Backup existing SSL folder
    win_copy:
      src: "{{ ssl_folder }}"
      dest: "{{ ssl_backup }}"
      remote_src: true

  - name: Delete Tomcat9 Windows service
    win_command: sc.exe delete Tomcat9
    ignore_errors: true

  - name: Remove existing Tomcat installation folder (force delete)
    win_file:
      path: "{{ install_path }}"
      state: absent
      force: true

  - name: Ensure unzip temp path exists
    win_file:
      path: "{{ unzip_temp }}"
      state: directory

  - name: Extract Tomcat ZIP to temporary folder
    win_unzip:
      src: "{{ zip_source_path }}"
      dest: "{{ unzip_temp }}"
      remote_src: true

  - name: Create final install path folder
    win_file:
      path: "{{ install_path }}"
      state: directory

  - name: Move extracted Tomcat files (flatten directory)
    win_shell: |
      if (Test-Path "{{ unzip_temp }}/{{ extracted_folder }}") {
        Move-Item -Path "{{ unzip_temp }}/{{ extracted_folder }}/*" -Destination "{{ install_path }}/" -Force
      }
    args:
      executable: powershell

  - name: Remove extracted folder
    win_file:
      path: "{{ unzip_temp }}/{{ extracted_folder }}"
      state: absent

  - name: Remove temporary unzip folder
    win_file:
      path: "{{ unzip_temp }}"
      state: absent

  - name: Check if tomcat9.exe exists
    win_stat:
      path: "{{ install_path }}/bin/tomcat9.exe"
    register: tomcat_exe_check

  - name: Fail if tomcat9.exe not found
    fail:
      msg: "tomcat9.exe is missing. Make sure the ZIP file is the Windows Service version."
    when: not tomcat_exe_check.stat.exists

  - name: Install Tomcat9 service with logging
    win_shell: |
      set "CATALINA_HOME={{ install_path }}" && "{{ install_path }}\bin\service.bat" install Tomcat9 > "{{ install_path }}\install_log.txt" 2>&1
    args:
      executable: cmd

  - name: Verify Tomcat9 service is installed
    win_shell: |
      Get-Service -Name "Tomcat9"
    args:
      executable: powershell
    register: tomcat_service_check
    failed_when: tomcat_service_check.rc != 0

  - name: Restore conf folder contents
    win_copy:
      src: "{{ conf_folder_backup }}/"
      dest: "{{ install_path }}/conf/"
      remote_src: true

  - name: Restore webapps folder contents
    win_copy:
      src: "{{ webapps_backup }}/"
      dest: "{{ install_path }}/webapps/"
      remote_src: true

  - name: Restore SSL folder
    win_copy:
      src: "{{ ssl_backup }}/"
      dest: "{{ ssl_folder }}/"
      remote_src: true

  - name: Remove wrongly nested folder (if accidentally created)
    win_file:
      path: 'E:\Apache Software Foundation\Apache Software Foundation'
      state: absent
      force: true

  - name: Start Tomcat service
    win_service:
      name: Tomcat9
      state: started

  - name: Tomcat installation and configuration complete
    debug:
      msg: "Tomcat 9 has been successfully deployed and started from {{ install_path }}"